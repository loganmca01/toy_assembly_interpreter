import SystemInfo
import AstInterface

def parse_system_info(file):

    global memory_size
    global num_regs
    global pc_loc
    global num_instructions

    parse_header(file, "SYSTEM\n")

    parse_body(file, "register-count: ", 16)

    num = read_int(file)
    num_regs = num

    parse_body(file, "register-names: ", 16)
    add_registers(file)

    parse_body(file, "program-counter-location: ", 26)

    num = read_int(file)
    pc_loc = num

    parse_body(file, "number-of-instructions: ", 24)
    num = read_int(file)
    num_instructions = num

    file.readline()

def parse_instructions(file):
    
    global num_instructions
    global instructions
    global regs

    


def parse_header(file, string):
    text = file.readline()
    if text != string:
        print("error: please only use .isa files generated by isa_interpreter program")
        quit()

def parse_body(file, string, size):
    text = file.read(size)
    if text != string:
        print("error: please only use .isa files generated by isa_interpreter program")
        quit()

def add_registers(file):

    s = file.readline()
    text = s.split("\n")

    reg_names = text[0].split(" ")

    global regs
    regs = []

    for reg in reg_names:
        if reg != "":
            regs.append(AstInterface.Symbol(reg, 0))


def read_int(file):

    text = file.readline()
    text.split("\n")
    return int(text)

def parse_all(filename):
    file = open(filename, "r")
    parse_system_info(file)
    global regs, pc_loc, num_regs
    for reg in regs:
        print(reg.name + " " + str(reg.value))
    print(pc_loc)
    print(num_regs)

    parse_instructions(file)

parse_all("output.isa")